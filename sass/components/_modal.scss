.modal {

    &__container {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 100%;
        min-height: 581px;
        background-color: getColor("white");
        transform: translate(-50%, -50%);
        font-size: 12px;
        border-radius: 4px;
        padding-bottom: 40px;

        @media screen and (min-width: $screenMobile) {
            max-width: 450px;
        }

        @media screen and (min-width: $screenDesktop) {
            max-width: 528px;
        }

    }

    &__button {
        position: absolute;
        top: 8px;
        right: 8px;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        cursor: pointer;
        border: 1px solid rgba(0, 0, 0, 0.1);
        background-color: getColor("white");
        
        &:hover .modal__icon,
        &:focus .modal__icon {
            opacity: 0.5;
            @include transition(opacity);   
        }
    }

    &__icon {
        fill: getColor("black");  
    }

    &__header {
        font-size: 20px;
        text-align: center;
        margin: 40px 0 12px;
        color: getColor("black-second");
    }
}

.modal-form {
    position: relative;
    flex-direction: column;
    margin: auto;
    width: 93%;
    gap: 10px;
    @include flex(center);

    &__label {
        @extend .modal-form;
        gap: 0;
        align-items: stretch;
        
        &:hover .modal-form__icon,
        &:focus .modal-form__icon {
            fill: getColor("blue");
            @include transition(fill);
        }
    }

    &__input {
        height: 40px;
        margin-top: 4px;
        padding-left: 40px;
        border-radius: 4px;
        outline: none;
        @include border(getColor("modal-input"));

        &:hover,
        &:focus {
            @include border(getColor("blue"));
            @include transition(border);
        }
    }

    &__comment {
        @extend .modal-form__input;
        height: 120px;
        padding: 12px 16px;
        resize: none;

        &::placeholder {
            color: getColor("placeholder");
        }

        &:hover,
        &:focus {
            @include border(getColor("blue"));
            @include transition(border);
        }
    }

    &__icon {
        position: absolute;
        width: 18px;
        height: 18px;
        top: 50%;
        left: 10px;
        fill: getColor("black-second");
        @include transition(fill);
    }

    &__checkbox {
        margin-top: 10px;
        margin-bottom: 20px;
        gap: 7px;
        font-size: 12px;
        flex-direction: row; 
        @include flex(center);

        @media screen and (min-width: $screenDesktop) {
            font-size: 14px;
        }
    }

    &__check {
        appearance: none;
        width: 13px;
        height: 12px;
        border-radius: 2px;
        cursor: pointer; 
        @include border(getColor("gray"));

        @media screen and (min-width: $screenDesktop) {
            width: 16px;
            height: 15px;
        }

        &:checked + .modal-form__check--icon {
            display: block;
            border-radius: 2px;
            background-color: getColor("blue");
            fill: getColor("white");
            border-radius: 2px;
            width: 13px;
            height: 12px; 
                
            @media screen and (min-width: $screenDesktop) {
                width: 16px;
                height: 15px;
            }
        }

        &:checked {
            display: none;
        }

        &--icon {
            display: none;
        }
    }

    &__link {
        color: getColor("blue");
        text-decoration: underline;

        &:hover,
        &:focus {
            opacity: 0.5;
            @include transition(opacity);
        }
    }

    &__button {
        @extend .button-theme;

        &:hover,
        &:focus {
            background: getColor("white");
            color: getColor("black");
            @include transition(color);
        }
    }
}

.backdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: getColor("bg-backdrop");
    transition: cubic-bezier(0.4, 0, 0.2, 1) 250ms;
  }
  
  .is-hidden {
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
  }